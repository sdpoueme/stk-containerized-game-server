{
  "Parameters": {
    "notifyPhone": {
      "Type": "String",
      "Default": "5148650526",
      "Description": "The recipient phone number for pipeline notification"
    },
    "notificationEmail": {
      "Type": "String",
      "Default": "pouemes@amazon.com",
      "Description": "The recipient email for pipeline notifications"
    },
    "gitRepoName": {
      "Type": "String",
      "Default": "stk-code-base",
      "Description": "The git repository hosting application code"
    },
    "baseImageName": {
      "Type": "String",
      "Default": "stk-server",
      "Description": "The docker image name"
    },
    "baseImageVersion": {
      "Type": "String",
      "Default": "latest",
      "Description": "The docker image version"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Resources": {
    "gitRepoE79A5E14": {
      "Type": "AWS::CodeCommit::Repository",
      "Properties": {
        "RepositoryName": {
          "Ref": "gitRepoName"
        },
        "Code": {
          "BranchName": "main",
          "S3": {
            "Bucket": "cdk-hnb659fds-assets-742301976366-us-east-2",
            "Key": "a6f48f9ef243241518bc2e52dbf2c8c71ff23c69794a5b8a5da6c9c686bce968.zip"
          }
        },
        "RepositoryDescription": "New repository for demo project."
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/gitRepo/Resource"
      }
    },
    "gitRepoPipelineStackcontainerPipeline7D038BD0mainEventRule0E4A529D": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.codecommit"
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "gitRepoE79A5E14",
                "Arn"
              ]
            }
          ],
          "detail-type": [
            "CodeCommit Repository State Change"
          ],
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated"
            ],
            "referenceName": [
              "main"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":codepipeline:us-east-2:742301976366:",
                  {
                    "Ref": "containerPipelineE427408B"
                  }
                ]
              ]
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "containerPipelineEventsRole7F8AAEEF",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/gitRepo/PipelineStackcontainerPipeline7D038BD0-main-EventRule/Resource"
      }
    },
    "BuildNotificationsDA021452": {
      "Type": "AWS::SNS::Topic",
      "Metadata": {
        "aws:cdk:path": "PipelineStack/BuildNotifications/Resource"
      }
    },
    "BuildNotificationsTokenSubscription1567E543C": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sms",
        "TopicArn": {
          "Ref": "BuildNotificationsDA021452"
        },
        "Endpoint": {
          "Ref": "notifyPhone"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/BuildNotifications/TokenSubscription:1/Resource"
      }
    },
    "BuildNotificationsTokenSubscription2691C2A51": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "BuildNotificationsDA021452"
        },
        "Endpoint": {
          "Ref": "notificationEmail"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/BuildNotifications/TokenSubscription:2/Resource"
      }
    },
    "BuildNotificationsPolicyFD25377F": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "codestar-notifications.amazonaws.com"
              },
              "Resource": {
                "Ref": "BuildNotificationsDA021452"
              },
              "Sid": "0"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "BuildNotificationsDA021452"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/BuildNotifications/Policy/Resource"
      }
    },
    "gameservers96C3BF90": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "ImageScanningConfiguration": {
          "ScanOnPush": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "PipelineStack/game-servers/Resource"
      }
    },
    "dockerBuildRole92F2A9D6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/dockerBuild/Role/Resource"
      }
    },
    "dockerBuildRoleDefaultPolicy4D647647": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-east-2:742301976366:log-group:/aws/codebuild/",
                      {
                        "Ref": "dockerBuild9FAAB478"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-east-2:742301976366:log-group:/aws/codebuild/",
                      {
                        "Ref": "dockerBuild9FAAB478"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:us-east-2:742301976366:report-group/",
                    {
                      "Ref": "dockerBuild9FAAB478"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "gameservers96C3BF90",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "gameservers96C3BF90",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "containerPipelineArtifactsBucket24B5D85B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "containerPipelineArtifactsBucket24B5D85B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "dockerBuildRoleDefaultPolicy4D647647",
        "Roles": [
          {
            "Ref": "dockerBuildRole92F2A9D6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/dockerBuild/Role/DefaultPolicy/Resource"
      }
    },
    "dockerBuild9FAAB478": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "Image": "aws/codebuild/amazonlinux2-aarch64-standard:2.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "ARM_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "dockerBuildRole92F2A9D6",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": {
            "Fn::Join": [
              "",
              [
                "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"docker build -t 742301976366.dkr.ecr.us-east-2.amazonaws.com/",
                {
                  "Ref": "gameservers96C3BF90"
                },
                ":",
                {
                  "Ref": "baseImageVersion"
                },
                " .\",\n        \"aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 742301976366.dkr.ecr.us-east-2.amazonaws.com/",
                {
                  "Ref": "gameservers96C3BF90"
                },
                "\",\n        \"docker push 742301976366.dkr.ecr.us-east-2.amazonaws.com//",
                {
                  "Ref": "gameservers96C3BF90"
                },
                ":",
                {
                  "Ref": "baseImageVersion"
                },
                "\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"imageDetail.json\"\n    ]\n  }\n}"
              ]
            ]
          },
          "Type": "NO_SOURCE"
        },
        "Cache": {
          "Type": "NO_CACHE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/dockerBuild/Resource"
      }
    },
    "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::742301976366:root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/ArtifactsBucketEncryptionKey/Resource"
      }
    },
    "containerPipelineArtifactsBucketEncryptionKeyAlias4460BD45": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/codepipeline-pipelinestackcontainerpipeline7d038bd0",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
      }
    },
    "containerPipelineArtifactsBucket24B5D85B": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/ArtifactsBucket/Resource"
      }
    },
    "containerPipelineArtifactsBucketPolicyBA24F528": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "containerPipelineArtifactsBucket24B5D85B"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "containerPipelineArtifactsBucket24B5D85B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "containerPipelineArtifactsBucket24B5D85B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/ArtifactsBucket/Policy/Resource"
      }
    },
    "containerPipelineRole7FEA970C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/Role/Resource"
      }
    },
    "containerPipelineRoleDefaultPolicy24580DF1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "containerPipelineArtifactsBucket24B5D85B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "containerPipelineArtifactsBucket24B5D85B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "containerPipelineSourceCodeCommitSourceCodePipelineActionRole9BBD9446",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "containerPipelineDockerBuildBuildCodeCodePipelineActionRole1809C40C",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "containerPipelineRoleDefaultPolicy24580DF1",
        "Roles": [
          {
            "Ref": "containerPipelineRole7FEA970C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/Role/DefaultPolicy/Resource"
      }
    },
    "containerPipelineE427408B": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "containerPipelineRole7FEA970C",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1"
                },
                "Configuration": {
                  "RepositoryName": {
                    "Fn::GetAtt": [
                      "gitRepoE79A5E14",
                      "Name"
                    ]
                  },
                  "BranchName": "main",
                  "PollForSourceChanges": false
                },
                "Name": "CodeCommit_Source",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_CodeCommit_Source"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "containerPipelineSourceCodeCommitSourceCodePipelineActionRole9BBD9446",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "dockerBuild9FAAB478"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_CodeCommit_Source"
                  }
                ],
                "Name": "Build_Code",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "containerPipelineDockerBuildBuildCodeCodePipelineActionRole1809C40C",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "DockerBuild"
          }
        ],
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
                "Arn"
              ]
            },
            "Type": "KMS"
          },
          "Location": {
            "Ref": "containerPipelineArtifactsBucket24B5D85B"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "containerPipelineRoleDefaultPolicy24580DF1",
        "containerPipelineRole7FEA970C"
      ],
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/Resource"
      }
    },
    "containerPipelineSourceCodeCommitSourceCodePipelineActionRole9BBD9446": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::742301976366:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/Source/CodeCommit_Source/CodePipelineActionRole/Resource"
      }
    },
    "containerPipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyE9C5617F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "containerPipelineArtifactsBucket24B5D85B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "containerPipelineArtifactsBucket24B5D85B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "containerPipelineArtifactsBucketEncryptionKeyFAE4D6AF",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "gitRepoE79A5E14",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "containerPipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyE9C5617F",
        "Roles": [
          {
            "Ref": "containerPipelineSourceCodeCommitSourceCodePipelineActionRole9BBD9446"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/Source/CodeCommit_Source/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "containerPipelineEventsRole7F8AAEEF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/EventsRole/Resource"
      }
    },
    "containerPipelineEventsRoleDefaultPolicyEC210F09": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codepipeline:us-east-2:742301976366:",
                    {
                      "Ref": "containerPipelineE427408B"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "containerPipelineEventsRoleDefaultPolicyEC210F09",
        "Roles": [
          {
            "Ref": "containerPipelineEventsRole7F8AAEEF"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/EventsRole/DefaultPolicy/Resource"
      }
    },
    "containerPipelineDockerBuildBuildCodeCodePipelineActionRole1809C40C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::742301976366:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/DockerBuild/Build_Code/CodePipelineActionRole/Resource"
      }
    },
    "containerPipelineDockerBuildBuildCodeCodePipelineActionRoleDefaultPolicyB6026FFD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "dockerBuild9FAAB478",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "containerPipelineDockerBuildBuildCodeCodePipelineActionRoleDefaultPolicyB6026FFD",
        "Roles": [
          {
            "Ref": "containerPipelineDockerBuildBuildCodeCodePipelineActionRole1809C40C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/containerPipeline/DockerBuild/Build_Code/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "buildNotificationRule5821673A": {
      "Type": "AWS::CodeStarNotifications::NotificationRule",
      "Properties": {
        "DetailType": "FULL",
        "EventTypeIds": [
          "codebuild-project-build-state-succeeded",
          "codebuild-project-build-state-failed"
        ],
        "Name": "PipelineStackbuildNotificationRule4AFCF542",
        "Resource": {
          "Fn::GetAtt": [
            "dockerBuild9FAAB478",
            "Arn"
          ]
        },
        "Targets": [
          {
            "TargetAddress": {
              "Ref": "BuildNotificationsDA021452"
            },
            "TargetType": "SNS"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/buildNotificationRule/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31Sy26DMBD8lt6N2/R1T3qMVCHSe2TMJlowNvKaVBHi37u2iUh76Glm1rszXsyz3LzJpwf1TYVuusJgLadDULoTHydbKq96COAFnx8n7RrQru8xyKmCwREG56+xcVWzoJejIoJAchuBtZx2o+4g7BSByDQOLSxD6Qzq61rOehZwActWUzUaSEmMnGG59OUG1LGWyWGsSXscAjobq790alkz7iRHaP/fPnHrekTTyKn0rgWdLr/QWaDqedott4u4xtwSosWAAxi0wC4LSx0Ln0XX80p7SHMRtgYVRZFI9qCgvHUBT6hVXIsnPu/k7Rv9rc2zSE/B73pGe84Lkhu95lzLvrKlx8vmXW5e+VdoCbHwow3Yg6wy/gAQV0O9JgIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/CDKMetadata/Default"
      }
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}